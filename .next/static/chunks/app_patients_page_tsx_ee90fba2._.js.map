{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jane-m4/development/patient-system/app/patients/page.tsx"],"sourcesContent":["// app/patients/page.tsx\n\"use client\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nexport default function PatientListPage() {\n  const [patients, setPatients] = useState<Patient[]>([]);\n\n  async function fetchData() {\n    // 获取患者列表\n    const res = await fetch(\"/api/patients\");\n    const resData = await res.json();\n\n    setPatients(resData);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <TableContainer component={Paper}>\n      <Typography variant=\"h5\" sx={{ p: 2 }}>\n        患者列表\n      </Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>编号</TableCell>\n            <TableCell>姓名</TableCell>\n            <TableCell>年龄</TableCell>\n            <TableCell>性别</TableCell>\n            <TableCell>医院</TableCell>\n            <TableCell>操作</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {patients.map((patient) => (\n            <TableRow key={patient.id}>\n              <TableCell>{patient.id}</TableCell>\n              <TableCell>{patient.name}</TableCell>\n              <TableCell>{patient.age}</TableCell>\n              <TableCell>{patient.gender}</TableCell>\n              <TableCell width={300}>{patient.hospital}</TableCell>\n              <TableCell width={150}>\n                <Button\n                  variant=\"contained\"\n                  component=\"a\"\n                  href={`/patients/${patient.id}`}\n                >\n                  查看详情\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;AAZA;;;AAce,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAEtD,eAAe;QACb,SAAS;QACT,MAAM,MAAM,MAAM,MAAM;QACxB,MAAM,UAAU,MAAM,IAAI,IAAI;QAE9B,YAAY;IACd;IACA,CAAA,GAAA,4RAAA,CAAA,YAAS,AAAD;qCAAE;YACR;QACF;oCAAG,EAAE;IACL,qBACE,4TAAC,6aAAA,CAAA,iBAAc;QAAC,WAAW,kZAAA,CAAA,QAAK;;0BAC9B,4TAAC,iaAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,IAAI;oBAAE,GAAG;gBAAE;0BAAG;;;;;;0BAGvC,4TAAC,kZAAA,CAAA,QAAK;;kCACJ,4TAAC,8ZAAA,CAAA,YAAS;kCACR,cAAA,4TAAC,2ZAAA,CAAA,WAAQ;;8CACP,4TAAC,8ZAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,4TAAC,8ZAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,4TAAC,8ZAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,4TAAC,8ZAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,4TAAC,8ZAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,4TAAC,8ZAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;;;;;;;kCAGf,4TAAC,8ZAAA,CAAA,YAAS;kCACP,SAAS,GAAG,CAAC,CAAC,wBACb,4TAAC,2ZAAA,CAAA,WAAQ;;kDACP,4TAAC,8ZAAA,CAAA,YAAS;kDAAE,QAAQ,EAAE;;;;;;kDACtB,4TAAC,8ZAAA,CAAA,YAAS;kDAAE,QAAQ,IAAI;;;;;;kDACxB,4TAAC,8ZAAA,CAAA,YAAS;kDAAE,QAAQ,GAAG;;;;;;kDACvB,4TAAC,8ZAAA,CAAA,YAAS;kDAAE,QAAQ,MAAM;;;;;;kDAC1B,4TAAC,8ZAAA,CAAA,YAAS;wCAAC,OAAO;kDAAM,QAAQ,QAAQ;;;;;;kDACxC,4TAAC,8ZAAA,CAAA,YAAS;wCAAC,OAAO;kDAChB,cAAA,4TAAC,qZAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,WAAU;4CACV,MAAM,AAAC,aAAuB,OAAX,QAAQ,EAAE;sDAC9B;;;;;;;;;;;;+BAXU,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;AAqBrC;GApDwB;KAAA","debugId":null}}]
}